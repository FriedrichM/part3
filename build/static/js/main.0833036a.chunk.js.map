{"version":3,"sources":["components/Entry.js","components/PhoneList.js","components/Searchbar.js","components/Notification.js","components/AddForm.js","services/persons.js","App.js","index.js"],"names":["Entry","entry","name","number","PhoneList","entries","deletehandler","map","onClick","id","Searchbar","handler","barvalue","value","onChange","Notification","message","error","className","AddForm","namechangeHandler","numberchangeHandler","nameValue","numbervalue","submitHandler","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","errorMessage","setErrorMessage","setError","useEffect","service","filteredPersons","filter","person","toLowerCase","includes","showmessage","setTimeout","event","target","preventDefault","existing","length","newEntry","concat","oldentry","window","confirm","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0833036a.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Entry = ({entry}) =>(\n  <>\n    {entry.name} {entry.number}\n  </>\n)\n\nexport default Entry\n","import React from 'react'\nimport Entry from './Entry'\n\n\nconst PhoneList = ({entries,deletehandler}) =>(\n  <>\n  {entries.map(entry =>\n    <div key={entry.id}>\n    <Entry  entry={entry} />\n    <button onClick={()=>deletehandler(entry)}>delete</button>\n    </div>\n  )}\n  </>\n)\n\nexport default PhoneList\n","import React from 'react'\n\nconst Searchbar = ({handler, barvalue}) =>(\n  <>\n  <input value={barvalue} onChange={handler}/>\n  </>\n)\nexport default Searchbar\n","import React from 'react'\n\n\n\nconst Notification = ({ message ,error}) => {\n  \n  if (message === null||message===\"\") {\n    return null\n  }\n\n  if(error){\n    return (\n      <div className=\"error\">\n      {message}\n      </div>\n    )\n  }else{\n    return (\n      <div className=\"good\">\n      {message}\n      </div>\n    )\n  }\n}\n\nexport default Notification\n","import React from 'react'\n\nconst AddForm = ({namechangeHandler,numberchangeHandler,nameValue,numbervalue,submitHandler}) =>(\n  <>\n  <form onSubmit= {submitHandler}>\n    <div>\n      name: <input value={nameValue} onChange={namechangeHandler} /><br/>\n      number: <input value={numbervalue} onChange={numberchangeHandler} />\n    </div>\n    <div>\n      <button type=\"submit\" >add</button>\n    </div>\n  </form>\n  </>\n)\n\nexport default AddForm\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\nconst deleteEntry = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, update, deleteEntry }\n","import React, { useState, useEffect } from 'react'\nimport PhoneList from './components/PhoneList'\nimport Searchbar from './components/Searchbar'\nimport Notification from './components/Notification'\nimport AddForm from './components/AddForm'\nimport service from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [ errorMessage, setErrorMessage] = useState('')\n  const [ error, setError] = useState('')\n\n  useEffect(() => {\n      service.getAll().then(response => setPersons(response))\n    }, [])\n\n  const onSearchInputChange =(event)=>{\n      setSearch(event.target.value)\n  }\n\n  const filteredPersons = search===''? [...persons]: persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n\n  const showmessage = (message,error)=>{\n    setErrorMessage(message)\n    setError(error)\n    setTimeout(() => {setErrorMessage(null)}, 5000)\n  }\n\n\n  const addNote =(event) =>{\n      event.preventDefault()\n      const existing = persons.filter(person => person.name === newName)\n      if(existing.length===0){\n        const newEntry = {\n          name: newName,\n          number: newNumber,\n          id:persons.length+1\n        }\n        service.create(newEntry)\n        .then(response => {\n          setPersons(persons.concat(response))\n          showmessage(`${response.name} added`,false)\n        })\n      }else{\n        const oldentry= existing[0]\n        if(window.confirm(`${oldentry.name} is already added to the phonebook, replace the old number with a new one?`)){\n          const newEntry = {...oldentry,\n            number:newNumber\n          }\n          service.update(oldentry.id,newEntry)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== oldentry.id ? person : response))\n            showmessage(`${response.name} updated`,false)\n          }).catch(error => {\n          showmessage( `${oldentry.name} was already removed from server`,true)\n          setPersons(persons.filter(person=> person.id!==oldentry.id))\n        })\n        }\n      }\n  }\n  const deletEntry =(entry) =>{\n    if(window.confirm(`Do you want to delete ${entry.name}?`)){\n      service.deleteEntry(entry.id)\n      .then(response => {\n        setPersons(persons.filter(person=> person.id!==entry.id))\n        showmessage(`${entry.name} deleted`,false)\n      })\n    }\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} error={error}/>\n      <Searchbar barvalue={search} handler={onSearchInputChange}/>\n      <h2>Add a new one</h2>\n      <AddForm namechangeHandler={(event)=>setNewName(event.target.value)} numberchangeHandler={(event)=>setNewNumber(event.target.value)} nameValue={newName} numbervalue={newNumber} submitHandler={addNote} />\n      <h2>Numbers</h2>\n      <PhoneList entries={filteredPersons} deletehandler={deletEntry}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}